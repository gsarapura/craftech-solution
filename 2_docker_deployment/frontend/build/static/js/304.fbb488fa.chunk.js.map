{"version":3,"file":"static/js/304.fbb488fa.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","views/auth/signin/RestLogin.js","views/auth/signin/SignIn2.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport useScriptRef from '../../../hooks/useScriptRef';\nimport { API_SERVER } from './../../../config/constant';\nimport { ACCOUNT_INITIALIZE } from './../../../store/actions';\n\nconst RestLogin = ({ className, ...rest }) => {\n    const dispatcher = useDispatch();\n    const scriptedRef = useScriptRef();\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        axios\n                            .post(API_SERVER + 'users/login', {\n                                password: values.password,\n                                email: values.email\n                            })\n                            .then(function (response) {\n                                if (response.data.success) {\n                                    console.log(response.data);\n                                    dispatcher({\n                                        type: ACCOUNT_INITIALIZE,\n                                        payload: { isLoggedIn: true, user: response.data.user, token: response.data.token }\n                                    });\n                                    if (scriptedRef.current) {\n                                        setStatus({ success: true });\n                                        setSubmitting(false);\n                                    }\n                                } else {\n                                    setStatus({ success: false });\n                                    setErrors({ submit: response.data.msg });\n                                    setSubmitting(false);\n                                }\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                                setStatus({ success: false });\n                                setErrors({ submit: error.response.data.msg });\n                                setSubmitting(false);\n                            });\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} className={className} {...rest}>\n                        <div className=\"form-group mb-3\">\n                            <input\n                                className=\"form-control\"\n                                error={touched.email && errors.email}\n                                label=\"Email Address\"\n                                placeholder=\"Email Address\"\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type=\"email\"\n                                value={values.email}\n                            />\n                            {touched.email && errors.email && <small className=\"text-danger form-text\">{errors.email}</small>}\n                        </div>\n                        <div className=\"form-group mb-4\">\n                            <input\n                                className=\"form-control\"\n                                error={touched.password && errors.password}\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type=\"password\"\n                                value={values.password}\n                            />\n                            {touched.password && errors.password && <small className=\"text-danger form-text\">{errors.password}</small>}\n                        </div>\n\n                        {errors.submit && (\n                            <Col sm={12}>\n                                <Alert variant=\"danger\">{errors.submit}</Alert>\n                            </Col>\n                        )}\n\n                        <div className=\"custom-control custom-checkbox  text-left mb-4 mt-2\">\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                                Save credentials.\n                            </label>\n                        </div>\n\n                        <Row>\n                            <Col mt={2}>\n                                <Button\n                                    className=\"btn-block\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"primary\"\n                                >\n                                    Sign IN\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                )}\n            </Formik>\n            <hr />\n        </React.Fragment>\n    );\n};\n\nexport default RestLogin;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport Breadcrumb from '../../../layouts/AdminLayout/Breadcrumb';\n\nimport RestLogin from './RestLogin';\n\nconst Signin1 = () => {\n    return (\n        <React.Fragment>\n            <Breadcrumb />\n            <div className=\"auth-wrapper\">\n                <div className=\"auth-content\">\n                    <div className=\"auth-bg\">\n                        <span className=\"r\" />\n                        <span className=\"r s\" />\n                        <span className=\"r s\" />\n                        <span className=\"r\" />\n                    </div>\n                    <Card className=\"borderless text-center\">\n                        <Card.Body>\n                            <div className=\"mb-4\">\n                                <i className=\"feather icon-unlock auth-icon\" />\n                            </div>\n                            <RestLogin />\n                            <p className=\"mb-2 text-muted\">\n                                Forgot password?\n                                <NavLink to=\"/auth/reset-password-1\" className=\"f-w-400\">\n                                    Reset\n                                </NavLink>\n                            </p>\n                            <p className=\"mb-0 text-muted\">\n                                Don’t have an account?\n                                <NavLink to=\"/auth/signup-2\" className=\"f-w-400\">\n                                    Signup\n                                </NavLink>\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Signin1;\n"],"names":["scripted","useRef","useEffect","current","className","rest","dispatcher","useDispatch","scriptedRef","useScriptRef","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","axios","API_SERVER","then","response","data","success","console","log","type","ACCOUNT_INITIALIZE","payload","isLoggedIn","user","token","msg","catch","error","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","label","placeholder","name","onBlur","onChange","value","sm","variant","id","htmlFor","mt","color","disabled","size","to"],"sourceRoot":""}